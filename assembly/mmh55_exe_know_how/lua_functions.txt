###########################################
#### This group of functions are responsible for adventure map, combat and town script commands ###

ScriptCommand_Combat_GetGameVar															-- sub_4D3DF0 (name)
ScriptCommand_Global_GetGameVar															-- sub_4DA480 (name)
ScriptCommand_AdvMap_GetGameVar															-- sub_4E27B0 (name)
ScriptCommand_AdvMap_GetDifficulty														-- sub_50D600 ()
ScriptCommand_Global_Load																-- sub_50D970 (fileName)
ScriptCommand_Global_Save																-- sub_50D7A0 (fileName)
ScriptCommand_Combat_SetGameVar															-- sub_4D4060 (name)
ScriptCommand_Global_SetGameVar															-- sub_4DA6A0 (name) 
ScriptCommand_AdvMap_SetGameVar															-- sub_4E29D0 (name)
ScriptCommand_AdvMap_StartThread														-- sub_BF7C80 (func)
ScriptCommand_AdvMap_AddHeroCreatures													-- sub_4F6E40 ** modified in 3.1 so Q using old version
ScriptCommand_AdvMap_AddObjectCreatures													-- sub_4FDBE0 ** modified in 3.1 so Q using old version
ScriptCommand_AdvMap_BlockGame															-- sub_4E2BD0 ( playersFilter=0 ) - parameter is only used in MP.
ScriptCommand_AdvMap_CalcHeroMoveCost													-- sub_4FF7F0 (heroName, x, y, floorID = -1);
ScriptCommand_AdvMap_CanMoveHero														-- sub_4FF490 (heroName, x, y, floorID = -1);
ScriptCommand_AdvMap_ChangeHeroStat														-- sub_4F4320 (heroName, statID, delta);
ScriptCommand_AdvMap_CreateMonster														-- sub_4F9780 (monsterName, creatureType, creaturesCount,
																							x, y, floorID, mood= MONSTER_MOOD_AGGRESSIVE 
																							courage= MONSTER_COURAGE_CAN_FLEE_JOIN, rotation= 0)
																							** modified in 3.1 so Q using old version - Now you can set whether the monster should grow.
ScriptCommand_AdvMap_DeployReserveHero													-- sub_4F34F0 (heroName, x, y, floor);
ScriptCommand_AdvMap_EnableAIHeroHiring													-- sub_4DE770 (playerID, townName, enable);
ScriptCommand_AdvMap_EnableHeroAI														-- sub_4DE4D0 (heroName, enable);
ScriptCommand_AdvMap_IsObjectExists														-- sub_4F9200 (objectName);
ScriptCommand_AdvMap_GenerateMonsters													-- sub_5005B0 (monsterTypeID, countGroupsMin, countGroupsMax,
																							countInGroupMin, countInGroupMax);
ScriptCommand_AdvMap_GetCurrentPlayer													-- sub_4DB3A0 ()
ScriptCommand_AdvMap_GetDate															-- sub_4DB140 (dateTypeID)
ScriptCommand_AdvMap_GetHeroCreatures													-- sub_4F6BD0 (heroName, creatureID); returns not an array but 7 values (so-called tuple)
ScriptCommand_AdvMap_GetHeroLevel														-- sub_4F3E90 (heroname);
ScriptCommand_AdvMap_GetHeroStat														-- sub_4F40A0 (heroName, statID);
ScriptCommand_AdvMap_GetObjectCreatures													-- sub_4FD2B0 (objectName, creatureID);
ScriptCommand_AdvMap_GetObjectiveProgress												-- sub_4DCE70 (objectiveName, playerID = PLAYER_1);
ScriptCommand_AdvMap_GetObjectiveState													-- sub_4DC6E0 (objectiveName, playerID = PLAYER_1);
ScriptCommand_AdvMap_GetObjectOwner														-- sub_4FC3F0 (objectName);
ScriptCommand_AdvMap_GetObjectsInRegion													-- sub_4FCC80 (regionName, objectType); Objects with no names are ignored
ScriptCommand_AdvMap_GetObjectPosition													-- sub_4FBC60 (objectName);
ScriptCommand_AdvMap_GetPlayerHeroes													-- sub_4F2240 (playerID);
ScriptCommand_AdvMap_GetPlayerGetPlayerResource											-- sub_4F26A0 (player, resourceKind);
ScriptCommand_AdvMap_GetTownBuildingLevel												-- sub_4F8270 (townName, buildingID);
ScriptCommand_AdvMap_GetTownBuildingLimitLevel											-- sub_4F87F0 (townName, buildingID);
ScriptCommand_AdvMap_GetTownBuildingMaxLevel											-- sub_4F8530 (townName, buildingID);
ScriptCommand_AdvMap_GetTownHero														-- sub_501530 (townName);
ScriptCommand_AdvMap_GiveArtefact														-- sub_4F5F00 (heroname, artefactID, [bindToHero = 0]);
ScriptCommand_AdvMap_LevelUpHero														-- sub_4F4900 (heroName);
ScriptCommand_AdvMap_GiveHeroSkill														-- sub_4F50A0 (heroName, skillID);
ScriptCommand_AdvMap_GiveHeroWarMachine													-- sub_4F7730 (heroName, warMachineType);
ScriptCommand_AdvMap_HasArtefact														-- sub_4F59D0 (heroname, artefactID);
ScriptCommand_AdvMap_HasBorderguardKey													-- sub_4F2FA0 (player, color);
ScriptCommand_AdvMap_HasHeroSkill														-- sub_4F4BE0 (heroName, skillID);
ScriptCommand_AdvMap_HasHeroWarMachine													-- sub_4F74D0 (heroName, warMachineType);
ScriptCommand_AdvMap_IsHeroAlive														-- sub_4F3C80 (heroname);
ScriptCommand_AdvMap_IsHeroLootable														-- sub_4F6770 (heroname);
ScriptCommand_AdvMap_IsObjectEnabled													-- sub_4FE8D0 (objectName);
ScriptCommand_AdvMap_IsObjectInRegion													-- sub_4FC9F0 (objectName, regionName);
ScriptCommand_AdvMap_IsObjectiveVisible													-- sub_4DC0F0 (objectiveName, playerID = PLAYER_1);
ScriptCommand_AdvMap_IsObjectVisible													-- sub_4FCFC0 (playerID, objectName);
ScriptCommand_AdvMap_IsRegionBlocked													-- sub_4DD770 (regionName, playerID);
ScriptCommand_AdvMap_KnowHeroSpell														-- sub_4F5470 (heroName, spell);
ScriptCommand_AdvMap_Loose																-- sub_4DAEA0 ()
ScriptCommand_AdvMap_MarkObjectAsVisited												-- sub_4FEDF0 (objectName, heroName);
ScriptCommand_Global_MessageBox															-- sub_4D8380 (messageName, callback = "")
ScriptCommand_AdvMap_MessageBox															-- sub_4D8380 (messageName, callback = "")
ScriptCommand_AdvMap_MoveCamera															-- sub_4E2E70 ( x,y,floorID, zoom=50, pitch=1.57, yaw=0, noZoom=0, noRotate=0, noMotion=0 )
ScriptCommand_AdvMap_MoveHero															-- sub_4FFC50 (heroName, x, y, floorID = -1);
ScriptCommand_AdvMap_MoveHeroRealTime													-- sub_500000 (heroName, x, y, floorID = -1);
ScriptCommand_AdvMap_GetAllNames														-- sub_4DBEF0 (filter = 0);
ScriptCommand_AdvMap_OpenCircleFog														-- sub_4DE1B0 (x, y, floorID, range, playerID);
ScriptCommand_AdvMap_OpenRegionFog														-- sub_4DDDC0 (player, regionName);
ScriptCommand_AdvMap_Play2DSound														-- sub_4E06E0 (soundName);
ScriptCommand_Global_Play2DSound														-- sub_4D89F0 (soundName);
ScriptCommand_Global_Play3DSound														-- sub_4D8BE0 (soundName, x, y, floor);
ScriptCommand_AdvMap_Play3DSound														-- sub_4E08F0 (soundName, x, y, floor);
ScriptCommand_Combat_PlayObjectAnimation												-- sub_4E5AB0 (objectName, animName, action);
ScriptCommand_Global_random																-- sub_4E3950 (top);
ScriptCommand_AdvMap_RazeTown															-- sub_4FB110 (townName);
ScriptCommand_AdvMap_RegionToPoint														-- sub_4DD510 (regionName);
ScriptCommand_AdvMap_RemoveArtefact														-- sub_4F61D0 (heroname, artefactID);
ScriptCommand_AdvMap_RemoveHeroCreatures												-- sub_4F7190 (heroname, creatureID, quantity); ** modified in 3.1 so Q using old version
ScriptCommand_AdvMap_RemoveHeroWarMachine												-- sub_4F79F0 (heroName, warMachineType);
ScriptCommand_AdvMap_RemoveObject														-- sub_4FB9D0 (objectName);
ScriptCommand_AdvMap_RemoveObjectCreatures												-- sub_4FE4C0 (objectName, creatureID, quantity); ** modified in 3.1 so Q using old version
ScriptCommand_AdvMap_ResetHeroCombatScript												-- sub_4F7FC0 (heroName);
ScriptCommand_AdvMap_SetAIHeroAttractor													-- sub_4E3B30 (objectName, heroName, priority);
ScriptCommand_AdvMap_SetAIPlayerAttractor												-- sub_4E3E00 (objectName, playerID, priority);
ScriptCommand_AdvMap_SetHeroCombatScript												-- sub_4F7CB0 (heroName, scriptName);
ScriptCommand_AdvMap_SetHeroLootable													-- sub_4F6980 (heroName, enable);
ScriptCommand_AdvMap_SetAmbientLight													-- sub_4DEAD0 (floorID, lightName, fade = false, time = 1);
ScriptCommand_AdvMap_SetObjectEnabled													-- sub_4FEB30 (objectName, enable);
ScriptCommand_AdvMap_SetObjectiveProgress												-- sub_4DD140 (objectiveName, step, playerID = PLAYER_1);
ScriptCommand_AdvMap_SetObjectiveState													-- sub_4DC9B0 (objectiveName, state, playerID = PLAYER_1);
ScriptCommand_AdvMap_SetObjectiveVisible												-- sub_4DC3C0 (objectiveName, enable, playerID = PLAYER_1);
ScriptCommand_AdvMap_SetObjectFlashlight												-- sub_4DEFF0 (objectName);
ScriptCommand_AdvMap_SetObjectOwner														-- sub_4FC630 (objectName, playerID);
ScriptCommand_AdvMap_SetObjectPosition													-- sub_4FBED0 (objectName, x, y, floor = -1); ** modified in 3.1 so Q using old version
ScriptCommand_AdvMap_SetPlayerResource													-- sub_4F2930 (player, resourceKind, quantity);
ScriptCommand_AdvMap_SetPlayerStartResources											-- sub_4F2CB0 (player, wood, ore, mercury, crystal, sulfur, gem, gold);
ScriptCommand_AdvMap_SetRegionBlocked													-- sub_4DDA20 (regionName, status, playerID = -1);
ScriptCommand_AdvMap_SetTownBuildingLimitLevel											-- sub_4F8AB0 (townName, buildingID, limit);
ScriptCommand_AdvMap_SetWarfogBehaviour													-- sub_4E36F0 (onLand, onSea);
ScriptCommand_AdvMap_ShowFlyingSign														-- sub_4DFF70 (messageName, objectName, targetPlayerID = -1, time = 1.0);
ScriptCommand_Combat_ShowFlyingSign														-- sub_4D85E0 (???)
ScriptCommand_AdvMap_SiegeTown															-- sub_504470 (heroName, townName, arenaName = "");
ScriptCommand_AdvMap_StartCombat														-- sub_503BA0 (heroName, enemyHeroName, enemyHeroName, creaturesCount, creatureType[1], 
																						creatureAmount[1],…,creatureType[Count] ,creatureAmount[Count],combatScriptName,
																						combatFinishTrigger, arenaName, allowQuickCombat );
ScriptCommand_AdvMap_StartCutScene														-- sub_4E2060 (cutSceneName, callback = "", saveName = "");
ScriptCommand_AdvMap_StartDialogScene													-- sub_4E1DF0 (dialogSceneName, callback = "", saveName = "");
ScriptCommand_AdvMap_TeachHeroSpell														-- sub_4F56E0 (heroName, spell);
ScriptCommand_AdvMap_TransformTown														-- sub_4FAC00 (townName, type);
ScriptCommand_AdvMap_UnblockGame														-- sub_4E2D20 ( playersFilter=0 ) - parameter is only used in MP.
ScriptCommand_AdvMap_UnreserveHero														-- sub_4F3990 (heroName);
ScriptCommand_AdvMap_Win																-- sub_4DA9A0 ()

ScriptCommand_Combat_DoPrepare															-- sub_5A9890 ()
ScriptCommand_Combat_DoStart															-- sub_5A9910 ()
ScriptCommand_Combat_SetControlMode														-- sub_4D0770 (side, mode)
ScriptCommand_Combat_EnableAutoFinish													-- sub_4D0C10 (enable);
ScriptCommand_Combat_Finish																-- sub_4D0DF0 (winnerSide);
ScriptCommand_Combat_GetHeroName														-- sub_4D1C90 (unitName);
ScriptCommand_Combat_GetCreatureType													-- sub_4D1EB0 (unitName);
ScriptCommand_Combat_GetCreatureNumber													-- sub_4D20E0 (unitName);
ScriptCommand_Combat_GetWarMachineType													-- sub_4D2330 (unitName);
ScriptCommand_Combat_GetBuildingType													-- sub_4D2560 (unitName);
ScriptCommand_Combat_GetUnitPosition													-- sub_4D1A60 (unitName);
ScriptCommand_Combat_AddCreature														-- sub_4D2790 (side, type, number, x = -1, y = -1);
ScriptCommand_Combat_EnableCinematicCamera												-- sub_4D7D70 (enable);
ScriptCommand_Global_IsTutorialItemEnabled												-- sub_50C3C0 IsTutorialItemEnabled
ScriptCommand_Global_IsTutorialMessageBoxOpen											-- sub_50C920 ()
ScriptCommand_Global_TutorialMessageBox													-- sub_50C7E0 (stringID);
ScriptCommand_Town_HeroHired															-- sub_7985D0 (name);
ScriptCommand_Town_CreatureHired														-- sub_798610 (type, number);

### Hammers of fate ####
ScriptCommand_AdvMap_SetPlayerTeam														-- sub_4E5D50 (player, team);
ScriptCommand_AdvMap_DenyAIHeroFlee														-- sub_4E5FD0 ( heroName, isDenied, enemyHeroName = "" );
ScriptCommand_AdvMap_DenyAIHeroesFlee													-- sub_4E6480 ( PlayerID, isDenied, enemyHeroName = "" );
ScriptCommand_AdvMap_SetAIHeroFleeControl												-- sub_4E6230 ( hero, uniqueControl ) if uniqueControl=1, this hero is unaffected by global flee control rules (has its own)
ScriptCommand_AdvMap_GetHeroSkillMastery												-- sub_4F4E40 (heroName, skillID);
ScriptCommand_AdvMap_RazeBuilding														-- sub_4FB550 (heroName, skillID);
ScriptCommand_AdvMap_CreateCaravan														-- sub_4E6FE0 (caravanName, caravanPlayer, floorID, x, y, destFloorID, destX, destY );
ScriptCommand_AdvMap_SetObjectRotation													-- sub_4FC160 (objectName, rotation);
ScriptCommand_AdvMap_PlayVisualEffect													-- sub_4E5430 ( effectName, objectName="", tag="", x=0,y=0,z=0, rot=0, floorID=0, playersFilter=0 )
=== in 3.1 - for MP, can now define whom to show
ScriptCommand_AdvMap_StopVisualEffects													-- sub_4E58D0 ( tagName="" );
ScriptCommand_AdvMap_OpenPuzzleMap														-- sub_4E6710 (player, numObelisks);
ScriptCommand_AdvMap_StartAdvMapDialog													-- sub_4E6BA0 (dialogIndex, callback);
ScriptCommand_AdvMap_QuestionBox														-- sub_4DF5C0 (messageName, callbackYes = “”, callbackNo = “”);


############# Tribes Of The East Functions ##############

ScriptCommand_AdvMap_GetCurrentMoonWeek													-- sub_5039B0 ();
ScriptCommand_AdvMap_AllowPlayerTavernRace												-- sub_4E8510 ( playerID, townTypeID, allow );
ScriptCommand_AdvMap_AllowPlayerTavernHero												-- sub_4E87E0 ( playerID, heroName, allow );
ScriptCommand_AdvMap_AllowHeroHiringByRaceInTown										-- sub_4E7F90 ( townName, townTypeID, allow );
ScriptCommand_AdvMap_AllowHiringOfHeroInTown											-- sub_4E8250 ( townName, heroName, allow );
ScriptCommand_AdvMap_AllowOpenFogOfWarForAlly											-- sub_4E8F10 ( townName, heroName, allow );
ScriptCommand_AdvMap_GetPlayerSelectedCampaignBonusIndex								-- sub_503520 ( playerID );
ScriptCommand_AdvMap_BlockTownGarrisonForAI												-- sub_4E77C0 ( townName, isBlocked );
ScriptCommand_AdvMap_AllowHeroHiringByRaceForAI											-- sub_4E7A60 ( playerID, townTypeID, allow );
ScriptCommand_AdvMap_AllowHiringOfHeroForAI												-- sub_4E7D20 ( playerID, heroName, allow );
ScriptCommand_AdvMap_DoNotGiveTurnToPlayerAIIfNoTownsAndActiveHeroes     				-- sub_4EB470 ( playerID, enable );	
ScriptCommand_AdvMap_SetHeroesExpCoef								     				-- sub_4E6990 ( fCoef );
ScriptCommand_AdvMap_IsHeroInBoat								     					-- sub_4E72A0 ( heroName );
ScriptCommand_AdvMap_SinkHero								     						-- sub_4E7510 ( heroName );
ScriptCommand_AdvMap_MakeHeroReturnToTavernAfterDeath		     						-- sub_4E8CE0 ( heroName, enable, heroShouldStayAtTavernUntilHired = 0 );
ScriptCommand_AdvMap_MakeHeroNecromancer		     									-- sub_4E8A70 (  heroName, necromancyLevel );
ScriptCommand_AdvMap_TakeAwayHeroExp		     										-- sub_4E9720 ( heroName, exp );
ScriptCommand_AdvMap_LockMinHeroSkillsAndAttributes		     							-- sub_4EAD30 ( heroName );
ScriptCommand_AdvMap_SetHeroRoleMode		     										-- sub_4EAF80 ( heroName, roleMode );
ScriptCommand_AdvMap_GetArtifactSetItemsCount		     								-- sub_4F64C0 ( heroName, artifactSetID, onlyCombined=1 );
ScriptCommand_AdvMap_IsHeroInTown		     											-- sub_4FA930 ( heroName, townName, checkGate=1, checkGarrison=1 );
ScriptCommand_AdvMap_SetHeroBiography	     											-- sub_503740 ( heroName, newBioTextFileRef );
ScriptCommand_AdvMap_MakeHeroInteractWithObject	     									-- sub_502F10 ( heroName, objectName );
ScriptCommand_AdvMap_ControlHeroCustomAbility	     									-- sub_503250 ( heroName, customAbilityID, customAbilityMode );
ScriptCommand_AdvMap_GetHeroCreaturesTypes												-- sub_4FD890 ( heroName );
ScriptCommand_AdvMap_GetObjectCreaturesTypes											-- sub_4FD540 ( objectName );
ScriptCommand_AdvMap_SetMonsterSelectionType											-- sub_4FF190 ( monsterName, selectionType ); **
ScriptCommand_AdvMap_SetMonsterNames													-- sub_4F9CB0 ( monsterName, monsterNamesFilter, nameFileRef );
ScriptCommand_AdvMap_SetMonsterCourageAndMood											-- sub_4F9F20 ( monsterName, playerID, courageID, moodID ) 
ScriptCommand_AdvMap_CreateDwelling														-- sub_4FA210 ( scriptName, townType, creaturesTier, ownerPlayer, x, y, floorID, rotation = 0 )
ScriptCommand_AdvMap_ReplaceDwelling													-- sub_502940 ( name, newTownType, [creatureId1, [creatureId2, [creatureId3, [creatureId4] ] ] ] )
ScriptCommand_AdvMap_SetRegionAutoObjectEnable											-- sub_4EA9C0 ( regionName, autoMode,heroTownType, heroPlayerID, heroName, objectName, enableType )
ScriptCommand_AdvMap_SetDisabledObjectMode												-- sub_4E91D0 ( objectName, disabledMode );
ScriptCommand_AdvMap_OverrideObjectTooltipNameAndDescription							-- sub_4EB200 ( objectName, name, desc );
ScriptCommand_AdvMap_DenyGarrisonCreaturesTakeAway										-- sub_502CB0 ( garrisonName, deny = 1/0 );
ScriptCommand_AdvMap_MakeTownMovable													-- sub_4E9490 ( townName );
ScriptCommand_AdvMap_DisableAutoEnterTown												-- sub_4EA720 ( townName, disable );
ScriptCommand_AdvMap_DestroyTownBuildingToLevel											-- sub_4F8E20 ( townName, buildingID, level, canRebuild = 1 );
ScriptCommand_AdvMap_GetSavedCombatResult												-- sub_4E9B60 ( combatIndex )
ScriptCommand_AdvMap_GetSavedCombatArmyPlayer											-- sub_4E9D50 ( combatIndex, forWinner )
ScriptCommand_AdvMap_GetSavedCombatArmyHero												-- sub_4E9F80 ( combatIndex, forWinner )
ScriptCommand_AdvMap_GetSavedCombatArmyCreaturesCount									-- sub_4EA1F0 ( combatIndex, forWinner )
ScriptCommand_AdvMap_GetSavedCombatArmyCreatureInfo										-- sub_4EA440 ( combatIndex, forWinner, creatureIndex )


 ########### UNDOCUMENTED #############
 
ScriptCommand_AdvMap_CalcAverageMonstersTier											-- sub_500AB0
ScriptCommand_AdvMap_CreateArtifact														-- sub_4F9410
ScriptCommand_AdvMap_DisableCameraFollowHeroes											-- sub_4E3430
ScriptCommand_AdvMap_GetGuardsTier														-- sub_4E4950
ScriptCommand_AdvMap_GetHeroArtifactsCount												-- sub_4F5C70
ScriptCommand_AdvMap_GetHeroTown														-- sub_501780
ScriptCommand_AdvMap_GetMaxFloor														-- sub_4E5290
ScriptCommand_AdvMap_GetObjectDwellingCreatures											-- sub_4FE240
ScriptCommand_AdvMap_GetObjectNamesByType												-- sub_4E4380  *
ScriptCommand_AdvMap_GetObjectsFromPath													-- sub_5019E0
ScriptCommand_AdvMap_GetPlayerState														-- sub_4F2090
ScriptCommand_AdvMap_GetStandState														-- sub_501050  *
ScriptCommand_AdvMap_SetStandState														-- sub_501260 
ScriptCommand_AdvMap_GetStandStatesCount												-- sub_500E40  **
ScriptCommand_AdvMap_GetTerrainSize														-- sub_4E4CB0
ScriptCommand_AdvMap_GiveBorderguardKey													-- sub_4F3240
ScriptCommand_AdvMap_IsTilePassable														-- sub_4E4EC0
Returns 1 if the tile at (X, Y) on the surface (Floor_ID = 0) or underground (Floor_ID = 1) is passable, or "nil" when it is blocked. It takes the mask in consideration, but ignores temporary blockades (like a Monster stack, a player Hero, etc ...).
ScriptCommand_AdvMap_RemoveAllMonsters													-- sub_500890
ScriptCommand_AdvMap_SetObjectDwellingCreatures											-- sub_4FDF80
ScriptCommand_AdvMap_SetPlayerHeroesCountNotForHire										-- sub_501EB0
ScriptCommand_AdvMap_SetTrigger															-- sub_4E1280 **
ScriptCommand_AdvMap_StopTrigger														-- sub_4E1CC0 **
ScriptCommand_AdvMap_CreateStatic														-- sub_502500
CreateStatic("Will_o_wisp","/MapObjects/Dirt/Misc/Will_o_the_wisp.(AdvMapStaticShared).xdb#xpointer(/AdvMapStaticShared)",X,Y,Floor);	
CreateStatic("dead C","/MapObjects/Catapult.(AdvMapStaticShared).xdb#xpointer(/AdvMapStaticShared)",X,Y,Floor);	
	vars (scriptName, dataFile, x,y,floorID, rot=0, terrainAligned=-1, scalePercent=100)
	- terrainAligned: -1=auto (as pre-patch), 0=disable, 1=force terrain align
	- scalePercent: 100=normal size		
ScriptCommand_AdvMap_GetLastSavedCombatIndex											-- sub_4E9970 ()
ScriptCommand_AdvMap_GetSoundTimeInSleeps												-- sub_4E0490 ( soundName ) returns sound's length in sleeps
ScriptCommand_AdvMap_OverrideAdvMapDialogPos											-- sub_4E6DB0
ScriptCommand_AdvMap_UpgradeTownBuilding												-- sub_4EB750
ScriptCommand_AdvMap_CreateTreasure														-- sub_502100 (Script Name, Treasure Type, Qty, x-coord, y-coord, floorID, rot=0),  treasure_id is between 0 and 13
ScriptCommand_AdvMap_GetTurnTimeLeft													-- sub_4EC020	
ScriptCommand_AdvMap_CanShowToPlayer													-- sub_4EBD80 ( playerID )	
ScriptCommand_AdvMap_IsPlayerLost														-- sub_4EBAD0 ( playerID )
ScriptCommand_AdvMap_IsTeamCurrent														-- sub_4DBC80
ScriptCommand_AdvMap_IsPlayerWaitingForTurn												-- sub_4DBA30
ScriptCommand_AdvMap_IsPlayerInGhostMode												-- sub_4DB7E0
ScriptCommand_AdvMap_IsPlayerCurrent													-- sub_4DB590
ScriptCommand_AdvMap_DisableCameraFollowHeroesForPlayers								-- sub_4E3590 ( playersFilter, disableOwn, disableAlly, disableEnemy )
ScriptCommand_AdvMap_MoveCameraForPlayers												-- sub_4E3150 ( playersFilter, x,y,floorID, zoom=50, pitch=1.57, yaw=0, noZoom=0, noRotate=0, noMotion=0 )
ScriptCommand_AdvMap_SetAmbientLightForPlayers											-- sub_4DED60 ( playersFilter, floorID, lightName, fade=false, time=1 )
ScriptCommand_AdvMap_Play3DSoundForPlayers												-- sub_4E0EC0 ( playersFilter, soundName, x,y,floorID )
ScriptCommand_AdvMap_QuestionBoxForPlayers												-- sub_4DFC00 ( playersFilter, msg, callbackYes, callbackNo )	
ScriptCommand_AdvMap_StartDialogSceneForPlayers											-- sub_4E22C0 ( playersFilter, dialogDBID, callback="", save="" )
ScriptCommand_AdvMap_StartCutSceneForPlayers											-- sub_4E2540 ( playersFilter, cutSceneDBID, callback="", save="" )
ScriptCommand_AdvMap_WinTeam															-- sub_4DAC40	
ScriptCommand_Global_ExitGame															-- sub_4E51A0
ScriptCommand_Combat_SetCombatAmbientLight												-- sub_4E40F0
ScriptCommand_Combat_combatStarted														-- sub_4D65D0
ScriptCommand_Combat_combatPlayEmotion													-- sub_4D6FC0
ScriptCommand_Combat_playAnimation														-- sub_4D6B70
ScriptCommand_Combat_CombatUnitNames													-- sub_4D49A0
ScriptCommand_Combat_GetUnits															-- sub_4D1670
ScriptCommand_Combat_GetUnitSide														-- sub_4D11A0
ScriptCommand_Combat_setATB																-- sub_4D6960
ScriptCommand_Combat_CombatDisplaceUnit													-- sub_4D5080
ScriptCommand_Combat_UnitCastAimedSpell													-- sub_4D3A80
ScriptCommand_Combat_UnitCastAreaSpell													-- sub_4D3860
ScriptCommand_Combat_UnitCastGlobalSpell												-- sub_4D3630
ScriptCommand_Combat_CombatUnitMoveAttack												-- sub_4D58C0
ScriptCommand_Combat_CombatUnitDoSpell													-- sub_4D6230
ScriptCommand_Combat_CombatUnitDoSpecial												-- sub_4D5EB0
ScriptCommand_Combat_CombatRemoveUnit													-- sub_4D4BD0
ScriptCommand_Combat_CombatRemoveAllUnits												-- sub_4D4E00
ScriptCommand_Combat_GetUnitType														-- sub_4D13F0
ScriptCommand_Combat_GetRageLevel														-- sub_4D8110 ( unitName )
ScriptCommand_Combat_GetRagePoints														-- sub_4D7EA0 ( unitName )
ScriptCommand_Combat_GetUnitMaxManaPoints												-- sub_4D3190
ScriptCommand_Combat_GetUnitManaPoints													-- sub_4D2F70
ScriptCommand_Combat_SetUnitManaPoints													-- sub_4D33B0
ScriptCommand_Combat_CombatShowHighlighting												-- sub_4D4290
ScriptCommand_Combat_CombatAddUnit														-- sub_4D43F0
ScriptCommand_Combat_Break																-- sub_4D1060
ScriptCommand_Combat_CombatSetPause														-- sub_4D6DC0
ScriptCommand_Combat_CombatReadyPerson													-- sub_4D6760
ScriptCommand_Combat_SummonCreature														-- sub_4D2B80
ScriptCommand_Global_EnableDynamicBattleMode											-- sub_4D0560
ScriptCommand_Global_errorHook															-- sub_BF7D80
ScriptCommand_Global_IsTutorialEnabled													-- sub_50CAB0
ScriptCommand_Global_GetMapDataPath														-- sub_50DB40
ScriptCommand_Global_Play2DSoundForPlayers												-- sub_4E0CA0 ( playersFilter, soundName, asVoiceover=0 )
ScriptCommand_Global_MessageBoxForPlayers												-- sub_4DF8E0 ( playersFilter, msg, callback )

ScriptCommand_Combat_ShotsNumber     													-- sub_4D7B80
ScriptCommand_Combat_Shots     															-- sub_4D7910
ScriptCommand_Combat_GetHost     														-- sub_4D0A00
ScriptCommand_Combat_ChangeSubject     													-- sub_4D75C0
ScriptCommand_Combat_ClearTutorialMessage     											-- sub_4D7490
ScriptCommand_Combat_ShowTutorialMessage     											-- sub_4D7300
ScriptCommand_Combat_ToggleTutorialMode     											-- sub_4D71D0
ScriptCommand_Combat_CombatUnitShot    													-- sub_4D5C00
ScriptCommand_Combat_CombatUnitMove    													-- sub_4D5530
ScriptCommand_Combat_CombatUnitDefend  													-- sub_4D5350
ScriptCommand_Combat_CombatUnitExist  													-- sub_4D4800
ScriptCommand_Combat_PostEvent      													-- sub_4D3CF0
ScriptCommand_Global_ActivateTutorialHint      											-- sub_50C560
ScriptCommand_Global_SetTutorialBlink      												-- sub_50C6A0
ScriptCommand_Global_Callback      														-- sub_8490A0
ScriptCommand_Global_IsEqual      														-- sub_BFD340
ScriptCommand_Global_GetGlobalVar      													-- sub_BFD460
ScriptCommand_Global_SetGlobalVar      													-- sub_BFD620
ScriptCommand_Global_LuaTest      														-- sub_BFDA60
ScriptCommand_Global_CoreErrorMessageImpl      											-- sub_847E80
ScriptCommand_Global_CoreParse			     											-- sub_847FD0
ScriptCommand_Global_CoreConsoleCommand			     									-- sub_848110
ScriptCommand_Global_CoreLoadScript			     										-- sub_848210
ScriptCommand_Global_MathMod			     											-- sub_848370
ScriptCommand_Global_MathSqrt			     											-- sub_848500
ScriptCommand_Global_CorePrint			     											-- sub_848670
ScriptCommand_Global_Error			     												-- sub_849250
ScriptCommand_Combat_Subject			     											-- sub_4D77B0





######## funky functions to take a look around ##########

musicsounds_many - sub_5922A0, sub_592A20
shots_many - sub_9717F0, sub_9722D0
resource related - sub_505910

########## Basic functions #############
mod (x, y)
print (..)
doFile

###########################################
### may be not in Q exe ??? ###
exist 
commandShot
commandAttack
commandDefend
GiveHeroBattleBonus
GiveTurnToNextPlayers - not sure if this is part of command or message
CombatEnableFinish

== probably in 3.1? ==
ResetObjectFlashlight(objectName); 
SetCombatLight
StopPlaySound
Trigger
Combat_IsHuman
Combat_IsComputer
Combat_GetAttackerHero
Combat_GetAttackerWarMachines
Combat_GetAttackerWarMachine
Combat_GetDefenderHero
Combat_GetDefenderWarMachines
Combat_GetDefenderWarMachine
Combat_GetDefenderBuildings
Combat_GetDefenderBuilding
Combat_IsAttacker
Combat_IsDefender
Combat_IsHero
Combat_IsCreature
Combat_IsWarMachine
Combat_IsBuilding
Global_TutorialActivateHint
Global_TutorialSetBlink

#### included since 3.1 (documented) ###
triggers:
+ HERO_ADD_SKILL_TRIGGER
+ HERO_REMOVE_SKILL_TRIGGER
+ HERO_TOUCH_TRIGGER

functions:
+ floor(n) - round towards 0: floor(1.75)=1, floor(-3.7)=-3
+ ceil(n) - round away from 0: ceil(2.25) = 3, ceil(-7.1) = 8
+ intg(n) - round to nearest integer
+ frac(n) - returns fractional part of a number: frac(1.23)= 0.23
+ round(n) - returns integer part of a number round(1.23)=1
+ GetPlayerRace( playerId ) - Get player race
+ IsAIPlayer( playerId ) - returns 1 if plaer is AI, 0 otherwise.
+ GetPlayerTeam( playerId ) - Returns team number
+ GetPlayerNecroEnergy( playerId ) - returns amount of dark energy player has (for necros)
+ GetObjectArmySlotCreature( objName, slotIndex ) - returns type and number of creatures in the given slot slotIndex of object objName
+ GetTownRace( townName )
+ GiveHeroBattleBonus( heroName, bonusType, amount ) - Gives a hero battle bonus for the next bttle (bonus types are defined in advmap-startup.lua)
+ WarpToMap( mapdbid, playerId = -1 ) - loads map mapdbid where the player will play for playerId (single player only). You can create non-linear campaigns this way.
+ WarpHeroExp( heroName, exp ) - sets hero's experience to given amount. Doesn't affect skills, parameters, etc.
+ TalkBoxForPlayers( playersFilter, iconRef, iconTooltipRef, textRef, addTextRef, callback, mode, titleTextRef, selectTextRef, defaultOption, optionTextRef [, optionTextRef, ...] )
- Message box with up to 5 answers. Example: s = 'Text/Chest/Choose.txt' TalkBoxForPlayers( PLAYERFLT_1, nil,s, s,s, 'test1', 0, s,s, 0, s,s,s )
+ GetHeroCount
+ HasHeroArtefact
+ GiveArtifact/GiveArtefacyy, bindToHero - comment incorrect. Should read: 0 - do not bind (default), 1 - bind to hero.

