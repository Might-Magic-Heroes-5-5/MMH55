	*(v3 + 68)				    # return attack 
	*(v3 + 72)					# return defense           
	*(v3 + 76)					# return shots 
	*(v3 + 80)					# return min_dmg 
	*(v3 + 84)					# return max_dmg 
	*(v3 + 88)					# return speed
	*(v3 + 92)					# return initiative
	*(v3 + 96)					# return flying? true/false
	*(v3 + 100)					# return Health
	*(v3 + 104)					# return KnownSpells
	*(v3 + 108)					# --
	*(v3 + 112)					# --
	*(v3 + 116)					# return spellpoints             #v[29]
	*(v3 + 120)					# return spellpoints1            #v[30]
	*(v3 + 124)					# return spellpoints2           #v[31]
	*(v3 + 128)					# return Experience			  #v[32]
	*(v3 + 132)					# return power		  		      #v[33]
	*(v3 + 136)					# return TimeToCommand			  #v[34]
	*(v3 + 140)					# return Tier					  #v[35]
	*(v3 + 144)					# return Upgrade		  		  #v[36]
	*(v3 + 148)					# return PairCreature			  #v[37]
	*(v3 + 152)					# return CreatureTown            #v[38]
	*(v3 + 156)					# return MagicElement array	
	*(v3 + 160)					# return MagicElement array
	*(v3 + 168)					# return unit WeeklyGrowth
	*(v3 + 172)					# return unit Cost
	*(v3 + 176)					- return unit Cost Wood
	*(v3 + 180)					- return unit Cost Ore
	*(v3 + 184)					- return unit Cost Mercury
	*(v3 + 188)					- return unit Cost Crystal
	*(v3 + 192)					- return unit Cost Sulfur
	*(v3 + 196)					- return unit Cost Gem
	*(v3 + 200)					- return unit Cost Gold
	*(v3 + 204)					# return PresetPrice
	*(v3 + 208)					# return SubjectOfRandomGeneration
	*(v3 + 212)					- return MonsterShared	
	*(v3 + 216)					- return MonsterShared	
	*(v3 + 220) 					# return unit combat size (1 or 2)
	*(v3 + 224)					# return unit pattern attack
	*(v3 + 228)					- return unit pattern attack
	*(v3 + 232)					- return unit pattern attack
	*(v3 + 236)					- return unit pattern attack
	*(v3 + 240)					- return flybySequence
	*(v3 + 244)					# return Visual
	*(v3 + 248)					# return Visual
	*(v3 + 252)					# return Range
	*(v3 + 256)					# return BaseCreature							#v[64]?
	*(v3 + 260)					# return Upgrades Array  						#v[65]?
	*(v3 + 264)					# return Upgrades Array						#v[66]?
	*(v3 + 268)					# return Abilities
	*(v3 + 272)					# return Abilities
	

	============================================================================================
	GameMechanics/CreatureVisual/Creatures/*(CreatureVisual).xdb array settings
	============================================================================================

	*(a2 + 68)                  # CreatureNameFileRef
	*(v3 + 80)                  # CreatureAbilitiesFileRef
	*(v3 + 92)                  # DescriptionFileRef
	*(v3 + 104)                  # Icon
	*(v3 + 112)                  # Icon32
	*(v3 + 120)                  # Icon64 
	*(v3 + 124)                  # Icon128
	*(v3 + 132)                  # AnimCharacter
	*(v3 + 140)                  # DeadCharacter
	*(v3 + 148)                  # AnimShot
	*(v3 + 156)                  # SummoningEffect
	*(v3 + 164)                  # DamageEffect
	*(v3 + 172)                  # TeleportingMove
	*(v3 + X)                  # 
	*(v3 + X)                  # 



+ 680 - return CreatureVisual Array ?

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	*(v7 + 32)								- return stack size
	
	
	*(v2 + 164)								- return unit spellpower/ initial offset?
	*(v2 + 180) 							- return unit shot count
	*(v2 + 184) 							- return unit spellpoints (mana)
	*(v2 + 188)								- return unit spellpoints1 (special abilities charges)
	*(v2 + 192)								- return unit spellpoints2 (gating related)
	*(v2 + 196)								- return mastery lvl
	*(v2 + 200)								- return duration
	*(v2 + 204)								- return defense
	*(v2 + 208) 							- return health
	*(v2 + 212)								- return initiative
    *(v2 + 216)								- return Tier
	*(v2 + 220)								- Casting spell "Wasp swarm" mastery
	
	===================================================================================================
	
  *(unit_v8 + 4) 							- 
  *(unit_v8 + 8) 							- 
  *(unit_v8 + 12) 							- 
  *(unit_v8 + 20) 							- 
  *(unit_v8 + 24) 							- 
  *(unit_v8 + 28) 							- 
  *(unit_v8 + 32) 							- 
  *(unit_v8 + 36) 							- 
  *(unit_v8 + 40) 							- 
  *(unit_v8 + 44) 							- 
  *(unit_v8 + 48) 							- 
  *(unit_v8 + 52) 							- 
  *(unit_v8 + 56) 							- 
  *(unit_v8 + 60) 							- 
  *(unit_v8 + 64) 							- 
  *(unit_v8 + 68) 							- 
  *(unit_v8 + 72) 							- 
  *(unit_v8 + 76) 							- unit attack after bonuses
  *(unit_v8 + 80) 							- unit defense after bonuses
  *(unit_v8 + 84) 							- unit min dmg after bonuses
  *(unit_v8 + 88) 							- unit max dmg after bonuses
  *(unit_v8 + 92)							- unit hp after bonuses
  *(unit_v8 + 96)							- unit hp after bonuses
  *(unit_v8 + 100)							- unit speed after bonuses
  *(unit_v8 + 104)							- unit initiative after bonuses
  *(unit_v8 + 112)							- unit morale after bonuses
  *(unit_v8 + 116)							- unit luck after bonuses
  *(unit_v8 + 124)							- unit range
   (unit_v8 + 140)							- unit ability list
  *(unit_v8 + 152) = 0;
  *(unit_v8 + 156)
  *(unit_v8 + 168)
  *(unit_v8 + 172)
  *(unit_v8 + 176)
  *(unit_v8 + 180)
  *(unit_v8 + 184) = *(v5 + 72);
  *(unit_v8 + 188) = *(v5 + 76);
  *(unit_v8 + 192) 							- is creature favourite enemy
  *(unit_v8 + 193) 							- 
  *(unit_v8 + 194) 							- 
  *(unit_v8 + 196) 							- is creature affacted by enemy specialization
  *(unit_v8 + 200) 							-
  *(unit_v8 + 204) 							-
  *(unit_v8 + 208) 							- 
  
  ##########################################################################
  *v13 = *(v5 + 56);
  v13[1] = *(v5 + 60);
  v13[2] = *(v5 + 64);
  v13[3] = *(v5 + 68);