// #STR: "TOWN_SPECIAL", "TOWN_RANDOM_TYPE", "TOWN_NO_TYPE", "TOWN_HEAVEN", "TOWN_PRESERVE", "TOWN_ACADEMY", "TOWN_DUNGEON", "TOWN_NECROMANCY", "TOWN_INFERNO", "TOWN_FORTRESS"
_DWORD *__fastcall define_town_vars(_DWORD *buffer, int town_id)
{
  _DWORD *result; // eax

  switch ( town_id )
  {
    case 0:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_SPECIAL");
      result = buffer;
      break;
    case 1:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_RANDOM_TYPE");
      result = buffer;
      break;
    case 2:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_NO_TYPE");
      result = buffer;
      break;
    case 3:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_HEAVEN");
      result = buffer;
      break;
    case 4:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_PRESERVE");
      result = buffer;
      break;
    case 5:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_ACADEMY");
      result = buffer;
      break;
    case 6:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_DUNGEON");
      result = buffer;
      break;
    case 7:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_NECROMANCY");
      result = buffer;
      break;
    case 8:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_INFERNO");
      result = buffer;
      break;
    case 9:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_FORTRESS");
      result = buffer;
      break;
    case 10:
      std::strstreambuf::~strstreambuf(buffer, "TOWN_STRONGHOLD");
      result = buffer;
      break;
    default:
      *buffer = 0;
      buffer[1] = 0;
      buffer[2] = 0;
      memcpy_A2inA1(buffer, "TOWN_SPECIAL", "");
      result = buffer;
      break;
  }
  return result;
}